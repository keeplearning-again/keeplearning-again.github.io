
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Xiao Ruiqiang is a MSc student in HKUST. My research interests include computer vision(mainly focus on object detecion), graph neural network and ‘AI + Engineering’.\n","date":1671753600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1671753600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Xiao Ruiqiang is a MSc student in HKUST. My research interests include computer vision(mainly focus on object detecion), graph neural network and ‘AI + Engineering’.","tags":null,"title":"Ruiqiang Xiao","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://keeplearning-again.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Ruiqiang Xiao","肖睿强"],"categories":["Demo"],"content":"Typora+Markdown快速入门 Why Markdown? 支持$\\LaTeX$语法、代码高亮、公式编辑块 自定义主题设定 自动排版、大纲面板可视化 实时预览 “打字模式+专注模式” yyds! 各种快捷用法 标题分级 列表 无序列表 (\u0026#39;-\u0026#39;+ \u0026#39;space\u0026#39;) 有序列表 ( Number + .+ \u0026#39;space\u0026#39;) 任务列表 (已经设置好的快捷键 ctrl + shift + x) 公式 行内公式 $$ 行间公式 (先输入$$ 然后enter) $$ F = ma $$\n代码块 ``` + enter\nfor i in range(5): pass 文本格式 **加粗** –\u0026gt; 加粗 *斜体* –\u0026gt; 斜体 下划线 –\u0026gt; 快捷键 Ctrl + U ==高亮== –\u0026gt; ==高亮== 生成思维导图 页内跳转 [try](#公式) 公式必须是前面有的模块\ntry\n引用 \u0026gt;\n插入视频 到视频下方复制代码 直接粘贴\n隐藏 \u0026lt;details\u0026gt; \u0026lt;summary\u0026gt;点击查看详细内容\u0026lt;/summary\u0026gt; 展开的内容 \u0026lt;/details\u0026gt; 点击查看详细内容\r展开的内容\r","date":1671753600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1671753600,"objectID":"1478e812e5bc0ca06bc0886cb2f6564a","permalink":"https://keeplearning-again.github.io/post/markdown+typora/","publishdate":"2022-12-23T00:00:00Z","relpermalink":"/post/markdown+typora/","section":"post","summary":"Some understanding of Typora+Markdown.","tags":["Academic"],"title":"Typora+Markdown快速入门","type":"post"},{"authors":["Ruiqiang Xiao","肖睿强"],"categories":["Demo"],"content":"计算机视觉任务 主要分为几大类：\n输入一张完整图像 –\u0026gt; single label（single object）–\u0026gt; ==classification== 输入一张完整图像 –\u0026gt; single object + anchor–\u0026gt; ==classification + localization== 输入一张完整图像 –\u0026gt; multiple object anchors–\u0026gt; ==object detection== 输入一张完整图像 –\u0026gt; 每一个对象具体的pixel–\u0026gt; ==segmentation== semantic segmentation –\u0026gt; 让每一个pixel都有一个label instance segmentation –\u0026gt; 区分每一个物体 机器学习和神经网络简介 机器学习的典型范式 监督学习 无监督学习 自监督学习 强化学习 交叉熵损失函数 – 极大似然估计 对于预测的类别概率$P \\in [0, 1]^K$和类别真值$y \\in \\left[1, \\cdots, K \\right]$,定义交叉熵损失为： $$ L(P, y) = - logP_y $$ 反向传播算法 推荐热门AI研究方向 人工智能的可解释性分析、显著性分析\n图机器学习、图神经网络（AlphaFold2）、知识图谱\n人工智能+VR/AR/数字人/元宇宙\n轻量化压缩部署：Web前端、智能手机、服务器、嵌入式硬件\nAl4Science：天文、物理、蛋白质预测、药物设计、数学证明\n做各行各业垂直细分领域的人工智能应用\n神经辐射场（NERF）\n扩散生成模型（Diffusion）、AIGC、跨模态预训练大模型\n隐私计算、联邦学习、可信计算\nAI基础设施平台（数据、算力、教学、开源、算法工具包）\n认知科学+类脑计算+计算神经科学\n","date":1670889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1670889600,"objectID":"66f6a45a5d9ca38a717365e302754393","permalink":"https://keeplearning-again.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E4%BB%BB%E5%8A%A1/","publishdate":"2022-12-13T00:00:00Z","relpermalink":"/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E4%BB%BB%E5%8A%A1/","section":"post","summary":"Some understanding of computer vision basic tasks.","tags":["Academic"],"title":"Computer vision basic tasks","type":"post"},{"authors":["Ruiqiang Xiao","肖睿强"],"categories":null,"content":"明确ChatGPT能解决问题的边界 graph TD;\r世界上有很多问题其中只有一小部分是数学问题 --\u0026gt; 在数学问题中只有一小部分是有解的 --\u0026gt; 在有解的问题中只有一部分是理想状态的图灵机通过有限步骤可以解决的 --\u0026gt; 在后一类的问题中又只有一部分是今天实际的计算机可以解决的 --\u0026gt; 而人工智能可以解决的问题又只是计算机可以解决问题的一部分 故我们可知 我们无法让chatGPT直接预测明天地球会不会毁灭 即使人类也无法给出答案\n基本原理 本质上就是大规模语言模型 按照概率输出结果\n他的输出是基于之前训练输入的数据和过往的标记数据得到的结果\n能做什么呢 选择一个主题 我可以帮助你选择一个既有趣又与你的研究领域相关的题目。\n制定提纲 我可以帮助你创建一个大纲，明确界定你的论文结构，包括导言、正文和结论。\n进行研究 我可以提供进行研究的提示和资源，并寻找可靠的来源来支持你的论点。\n撰写论文 我可以就如何写出清晰、简明、有条理的句子和段落，有效地传达你的观点提供建议。\n修改和编辑 我可以就如何修改和编辑你的论文提供反馈，以确保它没有错误并符合学术标准。\n引用资料 我可以指导你如何在论文中正确引用资料，包括使用MLA帮你写作这用方式。\n参考文献全是假的。\n代码实现 注意事项那个 尽量用英文提问 提高归纳概括的能力 AI知识助手 谨慎乐观的使用 数据有泄漏风险 ","date":1660521600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1660521600,"objectID":"9cac5d543013e145b725bf8b433d1c4e","permalink":"https://keeplearning-again.github.io/post/chatgpt%E6%80%BB%E7%BB%93/","publishdate":"2022-08-15T00:00:00Z","relpermalink":"/post/chatgpt%E6%80%BB%E7%BB%93/","section":"post","summary":"This blog talks about the historical developement of self-attention mechanism and the implementation of transformer decoder.","tags":["Academic"],"title":"Some ChatGPT findings","type":"post"},{"authors":["Ruiqiang Xiao","肖睿强"],"categories":null,"content":"1. 明确输入输出 将输入转化为vector 文本翻译 – 将词汇转化成same length vector（word2vector，one-hot coding） 信号处理 – 生成一段时长的window 将其中内容转化为一个frame vector 然后跳一个gap向前 图(graph) – 每一个node的信息汇总成vector vertices单独拎出来和后面attention matrix结合 图像 – 每一个pixel有三通道的向量 DETR 明确输出类型 例子：文本处理词性标注（POS tagging） / 一句话的感情分析（sentiment analysis） / model自己选择输出大小\n第一类问题（Sequence Labeling） 1. 面对的问题 （1）给一个sequence 如何生成corresponding sequence / labels 如果使用单一的fully-connected layers，那么给定的sequence长度随着时间变化，则无法做到泛化\n因此我们需要一个flexible的方法 不用限定sequence的长度\n（2）如何体现sequence的上下文信息对当前vector的output的影响 双向RNN能够体现上下文 用一个window将需要考虑的相邻向量容纳进去 但是无法平行计算(parallel – speedup)\n2. Self-attention （1） 解决的方法 1. Attention Score $\\alpha$ – 体现上下文信息 每个input向量之间会计算一个attention score 用来表示相似性 （计算方法有很多例如dot-product / addictive）\n2. 引入positional encoding 针对每一个attention layer 无论sequence的顺序如何，他都不影响结果输出，这表示no position information in self-attention – 天涯若比邻 每个向量之间的距离都是“一样的”\n引入unique positional vector $e^i$\nPositional encoding article – Learning to Encode Position for Transformer with Continuous Dynamical Model\n（2） 流程 1. 生成每一个向量的Query Key Value 每一层attention layer共享一个Query Key Value matrix $$W^q \\ W_k \\ W_v$$\n引入三个变量是为了引入更多可学习的参数，但是共享参数是为了减少训练量\n2. Q K 组合生成 $\\alpha$ Soft-max 后生成 $\\alpha^{\\prime}$ 下图为第一个向量与sequence中所有向量的attention score计算示意图\n3. Extract information based on attention scores $$ \\boldsymbol{b}^{\\mathbf{1}}=\\sum_{i} \\alpha_{1, i}^{\\prime} \\boldsymbol{v}^{i} $$\n（3） Matrix representation $$\r\\begin{aligned}\rQ \u0026amp;= w^q · I \\\\\rK \u0026amp;= w^k · I \\\\ V \u0026amp;= w^v · I \\\\ A^{\\prime} = softmax(A) \u0026amp;= softmax(K^T Q) \\\\\rO \u0026amp;= V A^{\\prime}\r\\end{aligned}\r$$\r3. Multi-head Self-attention different types of relevance\n4. Self-attention VS CNN CNN: self-attention that can only attends in a receptive field\nself-attention: CNN with learnable receptive field (complex version of CNN)\nOn the Relationship between Self-Attention and Convolutional Layers\n小样本数据集上CNN模型小更高效 大数据集样本上self-attention往往能找到更多的connection\n5. Self-attention VS RNN RNN递进关系会导致远距离很难考虑 并且 不是平行架构无法加速\nTransformers are RNNs: Fast Autoregressive Transformers with Linear Attention\n6. 综述文章 Efficient Transformers: A Survey\nLong Range Arena: A Benchmark for Efficient Transformers\nTransformers Sequence-to-sequence(seq2seq) Input a sequence, output a sequence.\nThe output length is determined by model.\nseq2seq for object detection – End-to-End Object Detection with Transformers\nTransformer’s Encoder – Self-attention encoder的核心问题 是将一个sequence的向量如何转化为同样长度的向量\n每一个block的处理顺序 self-attention\nresidual connection （防止梯度消失）\n为什么residual block能够防止梯度消失？\n根据后向传播的链式法则，\n$$ \\frac{\\partial L}{\\partial X_{\\text{Aout}}} = \\frac{\\partial L}{\\partial X_{\\text{Din}}} \\cdot \\frac{\\partial X_{\\text{Din}}}{\\partial X_{\\text{Aout}}} $$ $$ \\because X_{\\text{Din}} = X_{\\text{Aout}} + C(B(X_{\\text{Aout}})) $$ $$ \\frac{\\partial L}{\\partial X_{\\text{Aout}}} = \\frac{\\partial L}{\\partial X_{\\text{Din}}} \\cdot \\left[ 1 + \\frac{\\partial X_{\\text{Din}}}{\\partial X_{\\text{Cout}}} \\frac{\\partial X_{\\text{Cout}}}{\\partial X_{\\text{Bout}}} \\frac{\\partial X_{\\text{Bout}}}{\\partial X_{\\text{Aout}}}\\right] $$ $$ = \\frac{\\partial L}{\\partial X_{\\text{Din}}} + \\frac{\\partial L}{\\partial X_{\\text{Din}}}\\frac{\\partial X_{\\text{Din}}}{\\partial X_{\\text{Cout}}} \\frac{\\partial X_{\\text{Cout}}}{\\partial X_{\\text{Bout}}} \\frac{\\partial X_{\\text{Bout}}}{\\partial X_{\\text{Aout}}} $$ $$ = \\frac{\\partial L}{\\partial X_{\\text{Din}}} + \\text {original loss gradient} $$\n通常微分后都小于1 故原始梯度容易越算越小 到前端就容易消失无法改变\nnorm （layer normalization）同一个向量的不同dimension计算mean和deviation $$ \\begin{bmatrix} x_1 \u0026amp; x_2 \u0026amp; \\cdots \u0026amp; x_K \\end{bmatrix}^{T} \\rightarrow \\begin{bmatrix} x_1^{\\prime} \u0026amp; x_2^{\\prime} \u0026amp; \\cdots \u0026amp; x_K^{\\prime} \\end{bmatrix}^{T} $$\nbatch normalization是对同一个dimension不同的feature的mean和variance（不同向量之间的$x_i$的$\\mu$）\n[以下是encoder的详细说明](#Transformer’s Encoder – Self-attention)\nEncoder架构的变形 [2002.04745] On Layer Normalization in the Transformer Architecture (arxiv.org) [2003.07845] PowerNorm: Rethinking Batch Normalization in Transformers (arxiv.org) Transformer’s decoder 输出方式 – Autoregressive 和 non-autoregressive 将decoder的sequence vectors输入decoder autoregressive – 决定了decoder的输出方式（AT） 首先在decoder里输入vectors 输入begin of sentence（通常为one-hot coding vector） 第一个输出为一个长度为想要输出的范围的size长度的vector 再经过softmax得到distribution 取最大值 再将第一个输出当成新的输入（改成one-hot coding） 此时decoder输入有bos和之前的输出 再得到新的输出 以此类推 Decoder 本身架构 抛去中间的block 可以看到就是与decoder 相似的主体结构 唯一不同的是masked self-attention，很好理解不能剧透后面的部分。(类似于RNN) eg.\nEncoder和decoder如何交互？ cross layer 可以用不同类型 [2005.08081] Rethinking and Improving Natural Language Generation with Layer-Wise Multi-View Decoding (arxiv.org)\nTraining Loss: 每一个词汇的ground truth 和 decoder inference 之后的结果 计算cross entropy\nTeacher Forcing 为了更好的训练decoder 防止encoder的error propagation 所以会使用把正确结果放进decoder的输入看能不能输出正确结果\nScheduled Sampling 为了避免没有泛化能力 就给decoder的输入放一些故意的错误（原理有点类似于神经网路 dropout）\n[1906.07651] Scheduled Sampling for Transformers (arxiv.org)\n[1906.04331] Parallel Scheduled Sampling (arxiv.org)\nTips copy mechanism\nguided attention ？\nBeam Search ？\nOptimizing evaluation metrics？ – BLEU score\n …","date":1660262400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1660262400,"objectID":"77d740a99bda7443b0674a7a636abf6b","permalink":"https://keeplearning-again.github.io/post/transformer/","publishdate":"2022-08-12T00:00:00Z","relpermalink":"/post/transformer/","section":"post","summary":"This blog talks about the historical developement of self-attention mechanism and the implementation of transformer decoder.","tags":["Academic"],"title":"Self-attention mechanism and Transformers","type":"post"},{"authors":["Ruiqiang Xiao","肖睿强"],"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python\rimport pandas as pd\rdata = pd.read_csv(\u0026#34;data.csv\u0026#34;)\rdata.head()\r```\rrenders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;}\r- Hugo Modules\r- wowchemy\r- wowchemy-plugins-netlify\r- wowchemy-plugins-netlify-cms\r- wowchemy-plugins-reveal\r```\rrenders as\n- Hugo Modules\r- wowchemy\r- wowchemy-plugins-netlify\r- wowchemy-plugins-netlify-cms\r- wowchemy-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap\r- Mindmaps\r- Links\r- [Wowchemy Docs](https://wowchemy.com/docs/)\r- [Discord Community](https://discord.gg/z8wNYzb)\r- [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes)\r- Features\r- Markdown formatting\r- **inline** ~~text~~ *styles*\r- multiline\rtext\r- `inline code`\r-\r```js\rconsole.log(\u0026#39;hello\u0026#39;);\rconsole.log(\u0026#39;code block\u0026#39;);\r```\r- Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$\r```\rrenders as\n- Mindmaps\r- Links\r- [Wowchemy Docs](https://wowchemy.com/docs/)\r- [Discord Community](https://discord.gg/z8wNYzb)\r- [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes)\r- Features\r- Markdown formatting\r- **inline** ~~text~~ *styles*\r- multiline\rtext\r- `inline code`\r-\r```js\rconsole.log(\u0026#39;hello\u0026#39;);\rconsole.log(\u0026#39;code block\u0026#39;);\r```\r- Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$\rExample inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\rf(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\r1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}\r$$\rDiagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid\rgraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2]\r```\rrenders as\ngraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid\rsequenceDiagram\rAlice-\u0026gt;\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts!\rJohn--\u0026gt;\u0026gt;Alice: Great!\rJohn-\u0026gt;\u0026gt;Bob: How about you?\rBob--\u0026gt;\u0026gt;John: Jolly good!\r```\rrenders as\nsequenceDiagram\rAlice-\u0026gt;\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts!\rJohn--\u0026gt;\u0026gt;Alice: Great!\rJohn-\u0026gt;\u0026gt;Bob: How about you?\rBob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid\rgantt\rsection Section\rCompleted :done, des1, 2014-01-06,2014-01-08\rActive :active, des2, 2014-01-07, 3d\rParallel 1 : des3, after des1, 1d\rParallel 2 : des4, after des1, 1d\rParallel 3 : des5, after des3, 1d\rParallel 4 : des6, after des4, 1d\r```\rrenders …","date":1657584000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1657584000,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://keeplearning-again.github.io/post/writing-technical-content/","publishdate":"2022-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Ruiqiang Xiao","肖睿强"],"categories":["Demo","教程"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started 👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://keeplearning-again.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":["Ruiqiang Xiao"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://keeplearning-again.github.io/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Ruiqiang Xiao","肖睿强"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic!\rInstall Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post’s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://keeplearning-again.github.io/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://keeplearning-again.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://keeplearning-again.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://keeplearning-again.github.io/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":["Ruiqiang Xiao","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://keeplearning-again.github.io/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Ruiqiang Xiao","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://keeplearning-again.github.io/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]